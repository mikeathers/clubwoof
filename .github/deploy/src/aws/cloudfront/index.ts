import {Stack} from "aws-cdk-lib";import {Distribution, Function, FunctionCode, IDistribution, IFunction} from "aws-cdk-lib/aws-cloudfront";import {IBucket} from "aws-cdk-lib/aws-s3";import {ICertificate} from "aws-cdk-lib/aws-certificatemanager";import {S3Origin} from "aws-cdk-lib/aws-cloudfront-origins";export interface CreateFunctionProps {  scope: Stack;  functionName: string;  filePath: string;}export const createFunction = (props: CreateFunctionProps): IFunction => {  const {scope, functionName, filePath} = props  return new Function(scope, 'mappingFunction', {    functionName: functionName,    code: FunctionCode.fromFile({      filePath    })  })}export interface CreateDistributionProps {  scope: Stack;  bucket: IBucket;  certificate: ICertificate;  url: string;  functionAssociation: IFunction;}export const createDistribution = (props: CreateDistributionProps): IDistribution => {  const {scope, bucket, certificate, url, functionAssociation} = props  return new Distribution(scope, 'distribution', {    domainNames: [url],    defaultBehavior: {      origin: new S3Origin(bucket),      // functionAssociations: [      //   {      //     function: functionAssociation,      //     eventType: FunctionEventType.VIEWER_REQUEST      //   }      // ]    },    // certificate,    defaultRootObject: '/index.html',    errorResponses: [      {        httpStatus: 404,        responseHttpStatus: 404,        responsePagePath: '/404.html'      }    ]  })}