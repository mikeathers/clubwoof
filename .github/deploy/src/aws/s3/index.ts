import {RemovalPolicy, Stack} from "aws-cdk-lib";import {Bucket, IBucket} from "aws-cdk-lib/aws-s3";import {IDistribution} from "aws-cdk-lib/aws-cloudfront";import {BucketDeployment, Source} from "aws-cdk-lib/aws-s3-deployment";export interface CreateBucketProps {  scope: Stack;  bucketName: string;}export interface CreateBucketDeploymentProps {  scope: Stack;  bucket: IBucket;  distribution: IDistribution;  filePath: string;}export const createBucket = (props: CreateBucketProps): IBucket => {  const {scope, bucketName} = props  return new Bucket(scope, 'bucket', {    bucketName,    autoDeleteObjects: true,    removalPolicy: RemovalPolicy.DESTROY,    publicReadAccess: true,    websiteIndexDocument: 'index.html'  })}export const createBucketDeployment = (props: CreateBucketDeploymentProps): BucketDeployment => {  const {scope, bucket, distribution, filePath} = props  return new BucketDeployment(scope, 'bucketDeployment', {    destinationBucket: bucket,    sources: [      Source.asset(filePath)    ],    distribution  })}