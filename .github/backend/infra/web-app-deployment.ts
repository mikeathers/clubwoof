import {CfnOutput, Stack} from "aws-cdk-lib";import {Bucket} from "aws-cdk-lib/aws-s3";import {BucketDeployment, Source} from "aws-cdk-lib/aws-s3-deployment";import { join } from 'path';import {CloudFrontWebDistribution} from "aws-cdk-lib/aws-cloudfront";import CONFIG from "../config";export class WebAppDeployment {  private stack: Stack;  // @ts-ignore  private deploymentBucket: Bucket  constructor(stack: Stack){    this.stack = stack;    this.initialize();  }  private initialize() {    const bucketName = `${CONFIG.STACK_PREFIX}-web` + CONFIG.STACK_PREFIX;    this.deploymentBucket = new Bucket(      this.stack,      `${CONFIG.STACK_PREFIX}-bucket`, {        bucketName: bucketName,        publicReadAccess: true,        websiteIndexDocument: 'index.html'      }    );    new BucketDeployment(      this.stack,      `${CONFIG.STACK_PREFIX}-deployment`, {        destinationBucket: this.deploymentBucket,        sources: [          Source.asset(            join(__dirname, '..', '..', 'out')          )        ]      }    );    new CfnOutput(this.stack, 'clubwoofWebS3Url', {      value: this.deploymentBucket.bucketWebsiteUrl    });    const cloudFront = new CloudFrontWebDistribution(      this.stack,      `${CONFIG.STACK_PREFIX}-web-distribution`, {        originConfigs:[          {            behaviors: [              {                isDefaultBehavior: true              }            ],            s3OriginSource: {              s3BucketSource: this.deploymentBucket            }          }        ]      }    );    new CfnOutput(this.stack, 'clubwoofWebAppCloudFrontUrl', {      value: cloudFront.distributionDomainName    })  }}